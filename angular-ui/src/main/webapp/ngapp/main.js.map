{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/api.service.ts","webpack:///./src/app/app.browser.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/core/material.module.ts","webpack:///./src/app/first/first.component.css","webpack:///./src/app/first/first.component.html","webpack:///./src/app/first/first.component.ts","webpack:///./src/app/home-layout/home-layout.component.css","webpack:///./src/app/home-layout/home-layout.component.html","webpack:///./src/app/home-layout/home-layout.component.ts","webpack:///./src/app/login-layout/login-layout.component.css","webpack:///./src/app/login-layout/login-layout.component.html","webpack:///./src/app/login-layout/login-layout.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/model/event.model.ts","webpack:///./src/app/navigation/navigation.component.css","webpack:///./src/app/navigation/navigation.component.html","webpack:///./src/app/navigation/navigation.component.ts","webpack:///./src/app/second/second.component.css","webpack:///./src/app/second/second.component.html","webpack:///./src/app/second/second.component.ts","webpack:///./src/app/toolbar/toolbar.component.css","webpack:///./src/app/toolbar/toolbar.component.html","webpack:///./src/app/toolbar/toolbar.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { map, catchError, tap } from 'rxjs/operators';\nimport { Observable, of } from 'rxjs';\nimport { Event } from './model/event.model';\nimport { Question } from './model/question.model';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class APIService implements OnInit {\n\n  eventss: Event[];\n\n  endPoint = 'http://localhost:8080/v1/feedback';\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n    })\n  };\n\n  constructor(private http: HttpClient) { }\n\n  private extractData(res: Response) {\n  // tslint:disable-next-line:prefer-const\n  let body = res;\n  return body || { };\n  }\n\n  ngOnInit() {\n\n  }\n\n\n  getEventsFromApi(): Observable<any> {\n    return this.http.get(this.endPoint + '/events')\n    .pipe(map(this.extractData));\n  }\n\n  getEvents(): Event[] {\n    return this.eventss = [new Event(1, 'aaa', 'bbb')];\n    // this.getEventsFromApi().subscribe((data?: []) => {\n      // this.parseData(data);\n    // });\n    // return this.eventss;\n  }\n\n//   parseData(jsonData: string[]) {\n//     console.log(jsonData[0]);\n//     console.log('lenght ' + jsonData.length);\n//     for (let i = 0; jsonData.length; i++) {\n//       let questionsList: Question[];\n//       questionsList = [];\n//       // for (let j = 0; jsonData[i]['questions'].length - 1; j++) {\n//       //   const question = new Question(jsonData[i]['questions'][j]['id'], jsonData[i]['questions'][j]['questionName']);\n//       //   questionsList[j] = question;\n//       // }\n\n//         const question = new Question(1, 'Wie hat das Essen heute geschmeckt?');\n//         questionsList[0] = question;\n//       console.log('Fragen');\n//       console.log(jsonData[i]['name']);\n//       console.log(questionsList);\n\n\n//       const data = new Event(jsonData[i]['id'], jsonData[i]['name'], questionsList);\n//       this.eventss.push(data);\n//     }\n//   }\n\n//   private handleError<T> (operation = 'operation', result?: T) {\n//   return (error: any): Observable<T> => {\n\n//     // TODO: send the error to remote logging infrastructure\n//     console.error(error); // log to console instead\n\n//     // TODO: better job of transforming error for user consumption\n//     console.log(`${operation} failed: ${error.message}`);\n\n//     // Let the app keep running by returning an empty result.\n//     return of(result as T);\n//   };\n// }\n\n}\n","import { AppComponent } from './app.component';\nimport { AppModule } from './app.module';\nimport { NgModule } from '@angular/core';\n    import { BrowserModule } from '@angular/platform-browser';\n\n    @NgModule({\n bootstrap: [AppComponent],\n\n        imports: [\n BrowserModule.withServerTransition({appId: 'app-root'}),\n\n AppModule,\n\n        ]\n    })\n    export class AppBrowserModule {}\n\n","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { NgtUniversalModule } from '@ng-toolkit/universal';\nimport { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NavigationComponent } from './navigation/navigation.component';\nimport { SecondComponent } from './second/second.component';\nimport { FirstComponent } from './first/first.component';\nimport {RouterModule, Routes} from '@angular/router';\nimport {CustomMaterialModule} from './core/material.module';\nimport { LoginLayoutComponent } from './login-layout/login-layout.component';\nimport { HomeLayoutComponent } from './home-layout/home-layout.component';\nimport { LoginComponent } from './login/login.component';\nimport { ToolbarComponent } from './toolbar/toolbar.component';\n\nconst appRoutes: Routes = [\n  { path: '', redirectTo: 'login', data: { title: 'First Component' }, pathMatch: 'full' },\n  {\n    path: 'login', component: LoginLayoutComponent, data: {title: 'First Component'},\n    children: [\n      {path: '', component: LoginComponent}\n    ]\n  },\n  { path: 'main', component: HomeLayoutComponent,\n    children: [\n      { path: 'first', component: FirstComponent },\n      { path: 'second', component: SecondComponent }\n    ]\n  }\n];\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavigationComponent,\n    SecondComponent,\n    FirstComponent,\n    LoginLayoutComponent,\n    HomeLayoutComponent,\n    LoginComponent,\n    ToolbarComponent,\n  ],\n  imports: [\n CommonModule,\n NgtUniversalModule,\n HttpClientModule,\n\n    BrowserModule,\n    BrowserAnimationsModule,\n    RouterModule.forRoot(\n      appRoutes,\n      { useHash: false } // <-- debugging purposes only\n    ),\n    CustomMaterialModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {NgModule} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {\n  MatButtonModule, MatNativeDateModule, MatIconModule, MatSidenavModule,\n  MatListModule, MatToolbarModule, MatCardModule, MatInputModule, MatSelectModule\n} from '@angular/material';\n\n@NgModule({\n  // tslint:disable-next-line:max-line-length\n  imports: [CommonModule, MatButtonModule, MatToolbarModule, MatNativeDateModule, MatIconModule, MatSidenavModule, MatListModule, MatCardModule, MatInputModule, MatSelectModule],\n  // tslint:disable-next-line:max-line-length\n  exports: [CommonModule, MatButtonModule, MatToolbarModule, MatNativeDateModule, MatIconModule, MatSidenavModule, MatListModule, MatCardModule, MatInputModule, MatSelectModule],\n})\nexport class CustomMaterialModule { }\n","module.exports = \".firstFormat {\\n  text-align: -webkit-center;\\n}\"","module.exports = \"\\n\\n\\n<p *ngFor=\\\"let question of questionsArray\\\" class=\\\"firstFormat\\\">\\n    {{ question.questionName }}\\n</p>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { APIService } from '../api.service';\nimport { Event } from '../model/event.model';\nimport { Question } from '../model/question.model';\nimport { NavigationComponent } from '../navigation/navigation.component';\n\n@Component({\n  selector: 'app-first',\n  templateUrl: './first.component.html',\n  styleUrls: ['./first.component.css']\n})\nexport class FirstComponent implements OnInit {\n\n  eventsArray: Event[] = [];\n  questionsArray: Question[] = [];\n  public events: Event;\n\n  constructor(private apiService: APIService, private navigation: NavigationComponent) { }\n\n  ngOnInit() {\n    this.eventsArray = this.apiService.getEvents();\n    this.questionsArray = this.navigation.getQuestionsToEvent();\n  }\n}\n","module.exports = \"\"","module.exports = \"<app-navigation></app-navigation>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home-layout',\n  templateUrl: './home-layout.component.html',\n  styleUrls: ['./home-layout.component.css']\n})\nexport class HomeLayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login-layout',\n  templateUrl: './login-layout.component.html',\n  styleUrls: ['./login-layout.component.css']\n})\nexport class LoginLayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<app-toolbar></app-toolbar>\\n<mat-card class=\\\"example-card\\\">\\n  <mat-card-header>\\n    <mat-card-title>Login</mat-card-title>\\n  </mat-card-header>\\n  <mat-card-content>\\n    <form>\\n      <table class=\\\"example-full-width\\\" cellspacing=\\\"0\\\">\\n        <tr>\\n          <td>\\n            <mat-form-field class=\\\"example-full-width\\\">\\n              <input matInput placeholder=\\\"Username\\\" formControlName=\\\"email\\\" name=\\\"username\\\" required>\\n            </mat-form-field>\\n          </td>\\n        </tr>\\n        <tr>\\n          <td><mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput placeholder=\\\"Password\\\" formControlName=\\\"password\\\" type=\\\"password\\\" name=\\\"password\\\" required>\\n          </mat-form-field></td>\\n        </tr></table>\\n    </form>\\n  </mat-card-content>\\n  <mat-card-actions>\\n    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"onClickHandler()\\\">Login</button>\\n  </mat-card-actions>\\n</mat-card>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(private router: Router) { }\n  ngOnInit() {\n  }\n\n  onClickHandler() {\n    this.router.navigateByUrl('/main');\n  }\n\n}\n","\nimport { Question } from './question.model';\n\nexport class Event {\n  id: number;\n  name: string;\n  questions: Question[];\n\n  constructor(id, name, questions) {\n    this.id = id;\n    this.name = name;\n    this.questions = questions;\n  }\n\n  getId() {\n    return this.id;\n  }\n}\n","module.exports = \".example-container {\\n  height: 50%;\\n  margin: 10px;\\n}\\n\"","module.exports = \"<mat-toolbar color=\\\"warn\\\">\\n  <mat-toolbar-row>\\n    <button type=\\\"button\\\" aria-label=\\\"Toggle sidenav\\\" mat-icon-button (click)=\\\"drawer.toggle()\\\" color=\\\"primary\\\">\\n      <mat-icon aria-label=\\\"Side nav toggle icon\\\">menu</mat-icon>\\n    </button>\\n    <span><img src=\\\"../../assets/smileys/smileyOrange.png\\\" width=\\\"10%\\\" height=\\\"10%\\\"></span>\\n  </mat-toolbar-row>\\n</mat-toolbar>\\n<mat-sidenav-container class=\\\"example-container\\\">\\n  <mat-sidenav #drawer mode=\\\"side\\\" opened role=\\\"navigation\\\">\\n    <mat-nav-list>\\n      <a mat-list-item routerLink=\\\"first\\\" *ngFor=\\\"let event of eventsArray\\\" (click)=\\\"setQuestionsForId(event.getId)\\\"> {{ event.name }} </a>\\n      <a mat-list-item routerLink=\\\"second\\\">Second Component</a>\\n    </mat-nav-list>\\n  </mat-sidenav>\\n  <mat-sidenav-content>\\n    <router-outlet></router-outlet>\\n  </mat-sidenav-content>\\n</mat-sidenav-container>\\n<!--<mat-drawer-container class=\\\"example-container\\\">\\n  <mat-drawer #drawer mode=\\\"side\\\" opened>\\n    <a mat-list-item routerLink='/first'>First Component</a>\\n    <a mat-list-item routerLink='/second'>Second Component</a>\\n  </mat-drawer>\\n  <mat-drawer-content>\\n    <router-outlet></router-outlet>\\n  </mat-drawer-content>\\n</mat-drawer-container>-->\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Event } from '../model/event.model';\nimport { Question } from '../model/question.model';\nimport { APIService } from '../api.service';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.css']\n})\nexport class NavigationComponent implements OnInit {\n\n  eventsArray: Event[] = [];\n  questionsArray: Question[] = [];\n\n  constructor(private apiService: APIService) { }\n\n  ngOnInit() {\n    this.eventsArray = this.apiService.getEvents();\n  }\n\n  setQuestionsForId(id) {\n    for (let i = 0; this.eventsArray.length - 1; i++) {\n      if (this.eventsArray[i].getId === id) {\n        this.questionsArray = this.eventsArray[i].questions;\n      }\n    }\n\n  }\n\n  getQuestionsToEvent(): Question[] {\n    return this.questionsArray;\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  second works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-second',\n  templateUrl: './second.component.html',\n  styleUrls: ['./second.component.css']\n})\nexport class SecondComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<mat-toolbar color=\\\"warn\\\">\\n  <mat-toolbar-row>\\n    <span><img src=\\\"../../assets/smileys/smileyOrange.png\\\" width=\\\"10%\\\" height=\\\"10%\\\"></span>\\n  </mat-toolbar-row>\\n</mat-toolbar>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-toolbar',\n  templateUrl: './toolbar.component.html',\n  styleUrls: ['./toolbar.component.css']\n})\nexport class ToolbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { AppBrowserModule } from '.././src/app/app.browser.module';\nimport 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppBrowserModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}